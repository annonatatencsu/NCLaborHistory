name: convert_images_laborpanels
on: workflow_dispatch
permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  convertimages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: PDF fix
        run: sudo mv /etc/ImageMagick-6/policy.xml /etc/ImageMagick-6/policy.xml.off && sudo apt-get update && sudo apt-get install -y ghostscript-x
      - name: poppler
        run: sudo apt-get install -y poppler-utils
      - name: pip install
        run: pip3 install iiif pdf2image Pillow iiif-prezi git+https://github.com/giacomomarchioro/pyIIIFpres
      - name: runscript
        run: python3 -c "exec(\"from iiif.static import IIIFStatic\nfrom IIIFpres import iiifpapi3\nfrom PIL import Image\nimport os\nfrom pdf2image import convert_from_path\nfrom iiif_prezi.factory import ManifestFactory\n\nfiles = [('images/FINALDRAFTNCLaborHistoryExhibit2019Page01.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_01'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page02.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_02'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page03.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_03'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page04.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_04'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page05.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_05'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page06.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_06'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page07.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_07'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page08.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_08'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page09.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_09'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page10.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_10'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page11.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_11'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page12.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_12'), ('images/FINALDRAFTNCLaborHistoryExhibit2019Page13.jpg', 'FINAL DRAFT NC Labor History Exhibit (2019)_Page_13')]\nmanifestlabel = '''NC Labor History Panels'''\ndst = os.path.join('img/derivatives/iiif/', 'laborpanels') + '/'\nbaseurl = os.path.join('https://annonatatencsu.github.io/NCLaborHistory/', dst)\ndata = []\nallfiles = []\nfor idx, filedict in enumerate(files):\n    file = filedict[0]\n    filepath,ext = file.rsplit('.', 1)\n    if ext == 'pdf':\n        images = convert_from_path(file)\n        for i in range(len(images)):\n            imagefilename = filepath + '-' + str(i) +'.jpg'\n            images[i].save(imagefilename, 'JPEG')\n            allfiles.append([imagefilename, filedict[1]])\n        os.remove(file)\n    elif ext != 'jpg' and ext != 'jpeg':\n        os.system('convert {} {}.jpg'.format(file, filepath))\n        allfiles.append(('%s.jpg'%filepath, filedict[1]))\n        os.remove(file)\n    else:\n        allfiles.append(filedict)\n\nfor filedict in allfiles:\n    file = filedict[0]\n    filepath,ext = file.rsplit('.', 1)\n    filename = os.path.basename(filepath)\n    if ext != 'jpg' and ext != 'jpeg':\n        os.system('convert {} {}.jpg'.format(file, filepath))\n    sg = IIIFStatic(prefix=baseurl, dst=dst)\n    sggenerate = sg.generate(file)\n    img = Image.open(file)\n    data.append((filename, img.width, img.height, os.path.join(baseurl, filename),'/full/full/0/default.jpg', filedict[1]))\n    iiiffulldir = os.path.join(dst, filename, 'full/full')\n    if not os.path.isdir(iiiffulldir):\n        os.mkdir(iiiffulldir)\n        iiiffulldir = os.path.join(iiiffulldir, '0')\n        os.mkdir(iiiffulldir)\n    else:\n        iiiffulldir = os.path.join(iiiffulldir, '0')\n    os.system('mv {} {}'.format(file, os.path.join(iiiffulldir, 'default.jpg')))\niiifpapi3.BASE_URL = baseurl\nmanifest = iiifpapi3.Manifest()\nmanifest.set_id(extendbase_url='manifest.json')\nmanifest.add_label('en',manifestlabel)\nmanifest.add_behavior('paged')\ndescription = manifest.add_summary('en', '''''')\nmanifest.set_viewingDirection('left-to-right')\nrights = ''''''\nif rights:\n    try:\n        manifest.set_rights(rights)\n    except:\n        manifest.add_metadata('rights', rights, 'en', 'en')\n\ndata = tuple(data)\nfor idx,d in enumerate(data):\n    idx+=1\n    canvas = manifest.add_canvas_to_items()\n    canvas.set_id(extendbase_url='canvas/laborpanels-%s'%idx)\n    canvas.set_height(d[2])\n    canvas.set_width(d[1])\n    canvas.add_label('en', d[5])\n    filteredallfiles = [f for f in os.listdir(os.path.join(dst, d[0], 'full')) if f != 'full' and int(f.split(',')[0]) > 70]\n    filteredallfiles.sort()\n    size = filteredallfiles[0] if len(filteredallfiles) > 0 else '80,'\n    thumbnail = canvas.add_thumbnail()\n    thumbnail.set_id('{}/full/{}/0/default.jpg'.format(d[3], size))\n    annopage = canvas.add_annotationpage_to_items()\n    annopage.set_id(extendbase_url='page/p%s/1' %idx)\n    annotation = annopage.add_annotation_to_items(target=canvas.id)\n    annotation.set_id(extendbase_url='annotation/p%s-image'%str(idx).zfill(4))\n    annotation.set_motivation('painting')\n    annotation.body.set_id(''.join(d[3:5]))\n    annotation.body.set_type('Image')\n    annotation.body.set_format('image/jpeg')\n    annotation.body.set_width(d[1])\n    annotation.body.set_height(d[2])\n    s = annotation.body.add_service()\n    s.set_id(d[3])\n    s.set_type('ImageService2')\n    s.set_profile('level1')\n\nmanifest.json_save(os.path.join(dst, 'manifest.json'))\n\")"
      - name: add page jekyll to manifest
        run: echo -e "---\n---\n$(cat img/derivatives/iiif/laborpanels/manifest.json)" > img/derivatives/iiif/laborpanels/manifest.json
      - name: commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git config pull.rebase false
          git add -A
          git commit -m "Create laborpanels manifest and IIIF derivatives" -a || echo "No changes to commit"
      - name: pull
        run: git pull origin main
      - name: push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main 